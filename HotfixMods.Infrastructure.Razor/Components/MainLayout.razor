@using Microsoft.AspNetCore.Components.Routing
@inherits LayoutComponentBase

@inject NavigationManager NavigationManager

<MudThemeProvider IsDarkMode="true" Theme="_theme" />
<MudDialogProvider CloseOnEscapeKey="true"
                   DisableBackdropClick="false"
                   NoHeader="true"
                   MaxWidth="MaxWidth.ExtraSmall"
                   FullWidth="true"
                   CloseButton="true" />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.Center" Spacing="3" Style="width:100%;">
            <MudIconButton Icon="@Icons.Filled.MonitorHeart" Color="currentHref == hrefHealth ? Color.Primary : Color.Inherit" Size="Size.Small" OnClick="(() => Navigate(hrefHealth))" />
            <MudIconButton Icon="@Icons.Filled.Settings" Color="currentHref == hrefSettings ? Color.Primary : Color.Inherit" Size="Size.Small" OnClick="(() => Navigate(hrefSettings))" />
            <MudText Color="Color.Inherit" Typo="Typo.h5">|</MudText>
            <MudIconButton Icon="@Icons.Filled.FaceRetouchingNatural" Size="Size.Large" Color="currentHref == hrefCreature ? Color.Primary : Color.Inherit" OnClick="(() => Navigate(hrefCreature))" />
            <MudIconButton Icon="@Icons.Filled.Security" Color="currentHref == hrefItem ? Color.Primary : Color.Inherit" Size="Size.Large" OnClick="(() => Navigate(hrefItem))" />
            <MudIconButton Icon="@Icons.Filled.LocalFireDepartment" Color="currentHref == hrefSpells ? Color.Primary : Color.Inherit" Size="Size.Large" OnClick="(() => Navigate(hrefSpells))" />
            <MudIconButton Icon="@Icons.Filled.OutlinedFlag" Color="currentHref == hrefGameObjects ? Color.Primary : Color.Inherit" Size="Size.Large" OnClick="(() => Navigate(hrefGameObjects))" />

            <MudMenu ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
                <ActivatorContent>
                    <MudIconButton Icon="@Icons.Filled.MoreHoriz" Color="new List<string>(){ hrefSpellVisualKits, hrefSoundKits, hrefAnimKits }.Any(c => c == currentHref) ? Color.Primary : Color.Inherit" Size="Size.Large" Style="pointer-events: none;" />
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem OnClick="(() => Navigate(hrefSpellVisualKits))">Spell Visual Kits</MudMenuItem>
                    <MudMenuItem OnClick="(() => Navigate(hrefSoundKits))">Sound Kits</MudMenuItem>
                    <MudMenuItem OnClick="(() => Navigate(hrefAnimKits))">Anim Kits</MudMenuItem>
                </ChildContent>
            </MudMenu>

            <MudText Color="Color.Inherit" Typo="Typo.h5">|</MudText>
            <MudText Color="Color.Inherit" Typo="Typo.subtitle2">Hotfix Mods</MudText>

        </MudStack>
    </MudAppBar>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            <ErrorBoundary>
                <ChildContent>
                    @Body
                </ChildContent>
                <ErrorContent>
                    <ExceptionContent />
                </ErrorContent>
            </ErrorBoundary>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme _theme = new();

    string hrefHealth = "health";
    string hrefSettings = "settings";
    string hrefCreature = "creatures";
    string hrefItem = "items";
    string hrefGameObjects = "game-objects";
    string hrefSoundKits = "sound-kits";
    string hrefAnimKits = "anim-kits";
    string hrefSpellVisualKits = "spell-visual-kits";
    string hrefSpells = "spells";

    string currentHref;

    void Navigate(string href)
    {
        currentHref = href;
        this.StateHasChanged();
        NavigationManager.NavigateTo($"/{href}");
    }
}