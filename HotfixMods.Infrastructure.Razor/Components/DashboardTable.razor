@using HotfixMods.Infrastructure.Razor.RazorDashboard
@using HotfixMods.Infrastructure.Razor.Components.Dialogs

@inject IDialogService DialogService
@inject ISnackbar Snackbar


<MudTable Items="@Data" Hover="true" @ref="@mudTableRef">
    <HeaderContent>
        <MudTh>@*Avatars*@</MudTh>
        <MudTh>NAME</MudTh>
        <MudTh>ID</MudTh>
        <MudTh Style="text-align:right">
            <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="Add">New</MudButton>
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Avatar"><MudAvatar Elevation="6" Image="@($"{context.AvatarUrl}")" /></MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Action">
            <MudStack Row="true" Justify="Justify.FlexEnd">
                <MudIconButton Size="Size.Small" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" OnClick="@(() => EditAsync(context))" />
                <MudIconButton Size="Size.Small" Color="Color.Error" Icon="@Icons.Material.Filled.Delete" OnClick="@(() => DeleteAsync_Click(context))" />
            </MudStack>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudPaper Class="d-flex flex-column align-center">
            <MudPagination Rectangular="true" Variant="Variant.Text" Count="@((mudTableRef.GetFilteredItemsCount() + mudTableRef.RowsPerPage - 1) / mudTableRef.RowsPerPage)" Class="ma-2" SelectedChanged="PageChanged" />
        </MudPaper>
    </PagerContent>
</MudTable>



@code {
    [Parameter]
    public List<RazorDashboardModel> Data { get; set; }

    [Parameter]
    public Action Add { get; set; }

    MudTable<RazorDashboardModel> mudTableRef;

    async Task DeleteAsync_Click(RazorDashboardModel entity)
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Prompt_Dialog.Prompt), Prompt_Dialog.PromptType.Delete);
        parameters.Add(nameof(Prompt_Dialog.ActionAsync), (() => DeleteAsync(entity)));
        DialogService.Show<Prompt_Dialog>(null, parameters);
    }


    async Task EditAsync(RazorDashboardModel entity)
    {
        await InvokeAsync(entity.EditAction);
    }

    async void DeleteAsync(RazorDashboardModel entity)
    {
        await InvokeAsync(entity.DeleteAction);
        Data.RemoveAll(c => c.Id == entity.Id);
        this.StateHasChanged();
    }


    void PageChanged(int i)
    {
        mudTableRef.NavigateTo(i - 1);
    }
}
