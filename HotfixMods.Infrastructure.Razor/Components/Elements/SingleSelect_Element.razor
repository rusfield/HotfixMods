@typeparam T

<MudSelect Variant="@Variant" T="T" Value="Value" Label="@Label" ValueChanged="SetValueAsync" Class="@CssClass">
    @foreach (var item in Items)
    {
        <MudSelectItem T="T" Value="@item.Key">@item.Value</MudSelectItem>
    }
</MudSelect>

@code 
{
    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public T Value { get; set; }

    [Parameter]
    public Dictionary<T, string> Items { get; set; }

    [Parameter]
    public EventCallback<T> ValueChanged { get; set; }

    [Parameter]
    public string CssClass { get; set; }

    [Parameter]
    public Variant Variant { get; set; } = Variant.Outlined;

    async Task SetValueAsync(T newValue)
    {
        Value = newValue;
        await ValueChanged.InvokeAsync(Value);
    }
}