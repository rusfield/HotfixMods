<MudBadge Origin="Origin.CenterRight" Overlap="true" Icon="@Icons.Filled.ArrowBack" Color="@Color.Info" OnClick="@(() => SetValueAsync(ValueLookup))" Visible="@(GetBadgeVisibility())" Style="width:100%" Class="@(CssClass + " cursor-pointer")">
    <MudNumericField T="int?" Value="@Value" ValueChanged="SetValueAsync" Label="@Label" Variant="Variant.Outlined" HideSpinButtons="true" />
</MudBadge>


@code
{
    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public int? Value { get; set; }

    [Parameter]
    public int? ValueLookup { get; set; }

    [Parameter]
    public string CssClass { get; set; }

    [Parameter]
    public EventCallback<int?> ValueChanged { get; set; }

    bool GetBadgeVisibility()
    {
        return ValueLookup != null && Value != ValueLookup;
    }

    async Task SetValueAsync(int? newValue)
    {
        Value = newValue;
        await ValueChanged.InvokeAsync(Value);
    }
}
