@inject ISnackbar Snackbar

<MudBadge Icon="@Icons.Material.Filled.Close" Color="Color.Primary" Overlap="true" OnClick="(() => Dialog.Cancel())" Style="cursor:pointer">
    <MudDialog>
        <DialogContent>
            <MudText>@text</MudText>
            <MudText>@subText</MudText>
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="(async () => await Positive_Click())">@positiveButton</MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="(() => Dialog.Cancel())">@negativeButton</MudButton>
        </DialogActions>
    </MudDialog>
</MudBadge>
@code
{
    [CascadingParameter]
    MudDialogInstance Dialog { get; set; }

    [Parameter]
    public PromptType Prompt { get; set; }

    [Parameter]
    public Action ActionAsync { get; set; }

    string text = "Missing text...";
    string subText = "...";
    string positiveButton = "OK";
    string negativeButton = "Cancel";
    string positiveMessage = null;

    async Task Positive_Click()
    {
        await InvokeAsync(ActionAsync);
        if (positiveMessage != null)
            Snackbar.Add(positiveMessage, Severity.Info);

        Dialog.Close();
    }

    protected override void OnInitialized()
    {
        if (Prompt == PromptType.Save)
        {
            text = "This will save a new entity in the database.";
            subText = "Proceed?";
            positiveButton = "Save";
            negativeButton = "Cancel";
            positiveMessage = "Entity saved successfully";
        }
        else if (Prompt == PromptType.Update)
        {
            text = "This will override the existing entity.";
            subText = "Proceed?";
            positiveButton = "Update";
            negativeButton = "Cancel";
            positiveMessage = "Entity updated successfully";
        }
        else if (Prompt == PromptType.Discard)
        {
            text = "This will save a new entity in the database.";
            subText = "Proceed?";
            positiveButton = "Discard";
            negativeButton = "Cancel";
            positiveMessage = null;
        }
        else if (Prompt == PromptType.Delete)
        {
            text = "This will remove the entity from the database.";
            subText = "Proceed?";
            positiveButton = "Delete";
            negativeButton = "Cancel";
            positiveMessage = "Entity deleted successfully";
        }

        base.OnInitialized();
    }

    public enum PromptType
    {
        Save,
        Update,
        Discard,
        Delete
    }
}