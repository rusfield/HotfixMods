@using HotfixMods.Core.Enums
@using HotfixMods.Infrastructure.DtoModels
@using HotfixMods.Infrastructure.Razor.Components.Elements

<MudGrid>
    <MudItem xs="3" Class="@gridItemCssClass">
        <SingleSelect_Element T="SpellVisualKitEffectType?" Label="Effect Type" Value="Dto.EffectType" ValueLookup="DtoLookup?.EffectType" ValueChanged="EffectTypeChanged" />
        <Invisible_Element />
        <Invisible_Element />
        <Invisible_Element />
    </MudItem>
    <MudItem xs="6" Class="@gridItemCssClass">
    </MudItem>
    <MudItem xs="3" Class="@gridItemCssClass">

    </MudItem>
    <MudItem xs="3" Class="@gridItemCssClass" />
    <MudItem xs="6" Class="@gridItemCssClass">
        <TextInput_Element Variant="Variant.Text" Label="Name" @bind-Value="@Dto.HotfixModsName" ValueLookup="@DtoLookup?.HotfixModsName" />
    </MudItem>
    <MudItem xs="3" Class="@gridItemCssClass" />
</MudGrid>

@code {
    [Parameter]
    public SpellVisualKitDto Dto { get; set; }

    [Parameter]
    public SpellVisualKitDto? DtoLookup { get; set; }

    [Parameter]
    public EventCallback<SpellVisualKitEffectType> EffectTypeChangedCallback { get; set; }

    async Task EffectTypeChanged(SpellVisualKitEffectType? newValue)
    {
        Dto.EffectType = newValue;
        await EffectTypeChangedCallback.InvokeAsync((SpellVisualKitEffectType)newValue);
    }


    string gridItemCssClass = "pb-0 pt-0";
}