@using HotfixMods.Core.Flags
@using HotfixMods.Infrastructure.DtoModels
@using HotfixMods.Infrastructure.DtoModels.Spells
@using HotfixMods.Infrastructure.Blazor.Components.Elements

<MudGrid>
    <MudItem xs="3" Class="@gridItemCssClass">
        <SingleSelect_Element T="int?" Label="Effect Index" Value="SpellEffect.EffectIndex" ValueChanged="ValueChanged" Options="Spell.SpellEffects.ToDictionary(s => s.EffectIndex, k => k.EffectIndex.ToString())"/>
        <SingleSelect_Element Label="Effect" @bind-Value="SpellEffect.Effect" ValueLookup="SpellEffectLookup?.Effect"/>
        <SingleSelect_Element Label="Effect Aura" @bind-Value="SpellEffect.EffectAura" ValueLookup="SpellEffectLookup?.EffectAura"/>
        <MultiSelect_Element T="@SpellEffectAttributeFlags" Label="Attributes" @bind-Value="SpellEffect.EffectAttributes" ValueLookup="SpellEffectLookup?.EffectAttributes"/>
    </MudItem>
    <MudItem xs="6" Class="@gridItemCssClass">
        @* BG *@
    </MudItem>
    <MudItem xs="3" Class="@gridItemCssClass">
        <DecimalInput_Element Label="Effect Value" @bind-Value="SpellEffect.EffectBasePointsF" ValueLookup="SpellEffectLookup?.EffectBasePointsF"/>
        <IntInput_Element Label="Aura Tick Time (ms)" @bind-Value="SpellEffect.EffectAuraPeriod" ValueLookup="SpellEffectLookup?.EffectAuraPeriod"/>
        <SingleSelect_Element Label="Implicit Target 0" @bind-Value="SpellEffect.ImplicitTarget0" ValueLookup="SpellEffectLookup?.ImplicitTarget0"/>
        <SingleSelect_Element Label="Implicit Target 1" @bind-Value="SpellEffect.ImplicitTarget1" ValueLookup="SpellEffectLookup?.ImplicitTarget1"/>
    </MudItem>
    <MudItem xs="3" Class="@gridItemCssClass" />
    <MudItem xs="3" Class="@gridItemCssClass">
        <IntInput_Element Label="Miscellaneous Value 0" @bind-Value="SpellEffect.EffectMiscValue0" ValueLookup="SpellEffectLookup?.EffectMiscValue0"/>
    </MudItem>
    <MudItem xs="3" Class="@gridItemCssClass">
        <IntInput_Element Label="Miscellaneous Value 1" @bind-Value="SpellEffect.EffectMiscValue1" ValueLookup="SpellEffectLookup?.EffectMiscValue1"/>

    </MudItem>
    <MudItem xs="3" Class="@gridItemCssClass" />
</MudGrid>



@code
{
    [Parameter]
    public SpellEffectDto SpellEffect { get; set; }

    [Parameter]
    public SpellEffectDto? SpellEffectLookup { get; set; }

    [Parameter]
    public SpellDto Spell { get; set; }

    [Parameter]
    public EventCallback<int> EffectChanged { get; set; }



    async Task ValueChanged(int? newValue)
    {
        if (SpellEffect.EffectIndex != newValue)
        {
            Spell.SpellEffects.RemoveAt((int)SpellEffect.EffectIndex);
            Spell.SpellEffects.Insert((int)newValue, SpellEffect);
            for (int i = 0; i < Spell.SpellEffects.Count; i++)
            {
                Spell.SpellEffects[i].EffectIndex = i;
            }
            this.StateHasChanged();
            await EffectChanged.InvokeAsync((int)newValue);
        }
    }

    
    string gridItemCssClass = "pb-0 pt-0";
}
