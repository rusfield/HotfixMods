@using HotfixMods.Infrastructure.Extensions

@inherits HotfixPageTabBase<AnimKitSegment>

<MudGrid>
    <MudItem xs="3">
        <Input_Element T="byte" Value="Value.OrderIndex" ValueChanged="SegmentChanged" Options="@(options)" Label="@(nameof(Value.OrderIndex).ToDisplayName())" AllowUndefinedValues="false" OnInfoAdornmentClick="@(OpenInfoDialog("Hello"))" />
        <Input_Element T="sbyte" @bind-Value="@(Value.LoopToSegmentIndex)" Label="@(nameof(Value.LoopToSegmentIndex).ToDisplayName())" ValueCompare="ValueCompare?.LoopToSegmentIndex" />
        <Input_Element T="ushort" @bind-Value="@(Value.AnimKitConfigId)" Label="@(nameof(Value.AnimKitConfigId).ToDisplayName())" ValueCompare="ValueCompare?.AnimKitConfigId" />
        <Input_Element T="ushort" @bind-Value="@(Value.SegmentFlags)" Label="@(nameof(Value.SegmentFlags).ToDisplayName())" ValueCompare="ValueCompare?.SegmentFlags" />
        <Input_Element T="int" @bind-Value="@(Value.OverrideConfigFlags)" Label="@(nameof(Value.OverrideConfigFlags).ToDisplayName())" ValueCompare="ValueCompare?.OverrideConfigFlags" />
        <Input_Element T="decimal" @bind-Value="@(Value.Field_9_0_1_34278_018)" Label="@(nameof(Value.Field_9_0_1_34278_018).ToDisplayName())" ValueCompare="ValueCompare?.Field_9_0_1_34278_018" />
    </MudItem>
    <MudItem xs="6">
        <Invisible_Element />
        <Invisible_Element />
        <Invisible_Element />
        <Invisible_Element />
        <InlineGroup>
            <LeftContent>
                <Input_Element T="byte" @bind-Value="@(Value.StartCondition)" Label="@(nameof(Value.StartCondition).ToDisplayName())" ValueCompare="ValueCompare?.StartCondition" />
            </LeftContent>
            <MiddleContent>
                <Input_Element T="byte" @bind-Value="@(Value.StartConditionParam)" Label="@(nameof(Value.StartConditionParam).ToDisplayName())" ValueCompare="ValueCompare?.StartConditionParam" />
            </MiddleContent>
            <RightContent>
                <Input_Element T="uint" @bind-Value="@(Value.StartConditionDelay)" Label="@(nameof(Value.StartConditionDelay).ToDisplayName(null, " (ms/frames? TODO)"))" ValueCompare="ValueCompare?.StartConditionDelay" />
            </RightContent>
        </InlineGroup>
        <InlineGroup>
            <LeftContent>
                <Input_Element T="byte" @bind-Value="@(Value.EndCondition)" Label="@(nameof(Value.EndCondition).ToDisplayName())" ValueCompare="ValueCompare?.EndCondition" />
            </LeftContent>
            <MiddleContent>
                <Input_Element T="uint" @bind-Value="@(Value.EndConditionParam)" Label="@(nameof(Value.EndConditionParam).ToDisplayName())" ValueCompare="ValueCompare?.EndConditionParam" />
            </MiddleContent>
            <RightContent>
                <Input_Element T="uint" @bind-Value="@(Value.EndConditionDelay)" Label="@(nameof(Value.EndConditionDelay).ToDisplayName(null, " (ms/frames? TODO)"))" ValueCompare="ValueCompare?.EndConditionDelay" />
            </RightContent>
        </InlineGroup>
    </MudItem>

    <MudItem xs="3">
        <Input_Element T="ushort" @bind-Value="@(Value.AnimId)" Label="@(nameof(Value.AnimId).ToDisplayName())" ValueCompare="ValueCompare?.AnimId" />
        <Input_Element T="uint" @bind-Value="@(Value.AnimStartTime)" Label="@(nameof(Value.AnimStartTime).ToDisplayName(null, " (frames)"))" ValueCompare="ValueCompare?.AnimStartTime" />
        <Input_Element T="decimal" @bind-Value="@(Value.Speed)" Label="@(nameof(Value.Speed).ToDisplayName())" ValueCompare="ValueCompare?.Speed" />
        <Input_Element T="byte" @bind-Value="@(Value.ForcedVariation)" Label="@(nameof(Value.ForcedVariation).ToDisplayName())" ValueCompare="ValueCompare?.ForcedVariation" />
        <Input_Element T="ushort" @bind-Value="@(Value.BlendInTimeMs)" Label="@(nameof(Value.BlendInTimeMs).ToDisplayName())" ValueCompare="ValueCompare?.BlendInTimeMs" />
        <Input_Element T="ushort" @bind-Value="@(Value.BlendOutTimeMs)" Label="@(nameof(Value.BlendOutTimeMs).ToDisplayName())" ValueCompare="ValueCompare?.BlendOutTimeMs" />
    </MudItem>
</MudGrid>

@code {
    [Parameter]
    public AnimKits AnimKitPage { get; set; }

    Dictionary<byte, string> options;

    protected override void OnInitialized()
    {
        InitOptions();
        base.OnInitialized();
    }

    void SegmentChanged(byte newValue)
    {
        var segments = ((AnimKitDto)AnimKitPage.PageTab.Dto).AnimKitSegments;

        if (newValue < 0)
            newValue = 0;
        else if (newValue >= segments.Count)
            newValue = (byte)(segments.Count - 1);

        if (Value.OrderIndex != newValue)
        {
            segments.RemoveAt(Value.OrderIndex);
            segments.Insert(newValue, Value);
            for (byte i = 0; i < segments.Count; i++)
            {
                segments[i].OrderIndex = i;
            }
        }
        InitOptions();
        AnimKitPage.SetPanelIndex(newValue + 2); // +2 is for Entity and Anim Kit tabs
    }

    void InitOptions()
    {
        options = new();
        for (byte i = 0; i < ((AnimKitDto)AnimKitPage.PageTab.Dto).AnimKitSegments.Count; i++)
        {
            options.Add(i, i.ToString());
        }
    }
}