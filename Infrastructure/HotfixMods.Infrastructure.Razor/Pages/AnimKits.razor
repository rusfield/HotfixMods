@using HotfixMods.Infrastructure.Razor.Pages.AnimKitTabs
@using HotfixMods.Infrastructure.Razor.Pages.Shared

@inject AnimKitService Service
@inherits HotfixPageBase

@if (null == PageTab.Dto)
{
    <TabContentView  New_Callback="NewAsync_Click<AnimKitSearch_Dialog>" Title="Anim Kits">
    </TabContentView>
}
else
{
    <TabContentEditHeader IsUpdate="false" Title="Anim Kits" ValueCompare_Callback="@(async () => ValueCompareAsync_Click<AnimKitSearch_Dialog>())">
        <ChildContent>
            <MudTabPanel Class="custom-mud-tabs">
                <TabContent>
                    <TabTitle_Element Line1="HotfixMods" Line2="Entity" />
                </TabContent>
                <ChildContent>
                    <TabContentEditBody T="object">
                        <HotfixModsEntity_Tab Value="((AnimKitDto)PageTab.Dto).Entity" @bind-IsUpdate="((AnimKitDto)PageTab.Dto).IsUpdate" />
                    </TabContentEditBody>
                </ChildContent>
            </MudTabPanel>
            <MudTabPanel Class="custom-mud-tabs">
                <TabContent>
                    <TabTitle_Element Line1="Anim" Line2="Kit" />
                </TabContent>
                <ChildContent>
                    <TabContentEditBody T="object">
                        <AnimKit_Tab Value="((AnimKitDto)PageTab.Dto).AnimKit" ValueCompare="((AnimKitDto?)PageTab.DtoCompare)?.AnimKit" />
                    </TabContentEditBody>
                </ChildContent>
            </MudTabPanel>
            <MudTabPanel Class="custom-mud-tabs">
                <TabContent>
                    <TabTitle_Element Line1="Anim Kit" Line2="Segment" />
                </TabContent>
                <ChildContent>
                    <TabContentEditBody T="AnimKitDto.SegmentGroup" Instances="((AnimKitDto?)PageTab.Dto)?.SegmentGroups" @bind-CurrentInstance="currentSegmentInstance">
                        @if (((AnimKitDto?)PageTab.Dto).SegmentGroups.Any())
                        {
                            foreach ((var segment, int index) in ((AnimKitDto?)PageTab.Dto).SegmentGroups.WithIndex())
                            {
                                <AnimKitSegment_Tab OrderIndex="index" Value="segment.AnimKitSegment" ValueCompare="@(PageTab.DtoCompare != null && ((AnimKitDto?)PageTab.DtoCompare)?.SegmentGroups.Count > index ? ((AnimKitDto?)PageTab.DtoCompare)?.SegmentGroups[index].AnimKitSegment : null)" />
                            }
                        }
                        else
                        {
                            <TabContentNoData Text="There are no Anim Kit Segments yet." />
                        }
                    </TabContentEditBody>
                </ChildContent>
            </MudTabPanel>
            <MudTabPanel Class="custom-mud-tabs">
                <TabContent>
                    <TabTitle_Element Line1="Anim Kit" Line2="Config" />
                </TabContent>
                <ChildContent>
                    <TabContentEditBody T="AnimKitDto.SegmentGroup" Instances="((AnimKitDto?)PageTab.Dto)?.SegmentGroups" @bind-CurrentInstance="currentSegmentInstance">
                        @if (((AnimKitDto?)PageTab.Dto).SegmentGroups.Any())
                        {
                            foreach ((var segment, int index) in ((AnimKitDto?)PageTab.Dto).SegmentGroups.WithIndex())
                            {
                                <AnimKitConfig_Tab Value="segment.AnimKitConfig" ValueCompare="@(PageTab.DtoCompare != null && ((AnimKitDto?)PageTab.DtoCompare)?.SegmentGroups.Count > index ? ((AnimKitDto?)PageTab.DtoCompare)?.SegmentGroups[index].AnimKitConfig : null)" />
                            }
                        }
                        else
                        {
                            <TabContentNoData Text="There are no Anim Kit Segments yet." />
                        }
                    </TabContentEditBody>
                </ChildContent>
            </MudTabPanel>
            <MudTabPanel Class="custom-mud-tabs">
                <TabContent>
                    <TabTitle_Element Line1="Anim Kit" Line2="Config Bone Set" />
                </TabContent>
                <ChildContent>
                    <TabContentEditBody T="AnimKitDto.SegmentGroup" Instances="((AnimKitDto?)PageTab.Dto)?.SegmentGroups" @bind-CurrentInstance="currentSegmentInstance">
                        @if (((AnimKitDto?)PageTab.Dto).SegmentGroups.Any())
                        {
                            foreach ((var segment, int index) in ((AnimKitDto?)PageTab.Dto).SegmentGroups.WithIndex())
                            {
                                <AnimKitConfigBoneSet_Tab Value="segment.AnimKitConfigBoneSet" ValueCompare="@(PageTab.DtoCompare != null && ((AnimKitDto?)PageTab.DtoCompare)?.SegmentGroups.Count > index ? ((AnimKitDto?)PageTab.DtoCompare)?.SegmentGroups[index].AnimKitConfigBoneSet : null)" />
                            }
                        }
                        else
                        {
                            <TabContentNoData Text="There are no Anim Kit Segments yet." />
                        }
                    </TabContentEditBody>
                </ChildContent>
            </MudTabPanel>
        </ChildContent>
    </TabContentEditHeader>
}

@code {
    int currentSegmentInstance = 1;


}