@using Infrastructure.Extensions
@using HotfixMods.Infrastructure.Razor.Pages.SoundKitTabs

@inject SoundKitService Service
@inherits HotfixPageBase

@if (null == PageTab.Dto)
{
    <TabContentView Data="new List<DashboardModel>()" New_Callback="NewAsync_Click<SoundKitSearch_Dialog>" Title="Sound Kits">
    </TabContentView>
}
else
{
    <TabContentEditHeader IsUpdate="false" Title="Sound Kits" ValueCompare_Callback="@(async () => ValueCompareAsync_Click<SoundKitSearch_Dialog>())">
        <ChildContent>
            <MudTabPanel Text="Entity">
                <TabContentEditBody>
                    <SoundKitEntity_Tab Value="((SoundKitDto)PageTab.Dto).Entity" />
                </TabContentEditBody>
            </MudTabPanel>
            <MudTabPanel Text="Sound Kit">
                <TabContentEditBody>
                    <SoundKit_Tab Value="((SoundKitDto)PageTab.Dto).SoundKit" ValueCompare="((SoundKitDto?)PageTab.DtoCompare)?.SoundKit" />
                </TabContentEditBody>
            </MudTabPanel>
            @foreach (var (item, index) in ((SoundKitDto)PageTab.Dto).SoundKitEntries.WithIndex())
            {
                <MudTabPanel Text="@($"Entry #{index + 1}")">
                    <TabContentEditBody>
                        <SoundKitEntry_Tab SoundKitPage="this" Value="item" ValueCompare="@(PageTab.DtoCompare != null ? ((SoundKitDto?)PageTab.DtoCompare)?.SoundKitEntries[index] : null)" />
                    </TabContentEditBody>
                </MudTabPanel>
            }
        </ChildContent>
    </TabContentEditHeader>
}

@code {
    void AddEntry_Click()
    {
        if (PageTab.Dto != null)
            ((SoundKitDto)PageTab.Dto).SoundKitEntries.Add(new SoundKitEntry());
    }
}