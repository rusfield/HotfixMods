<MudGrid Class="mb-1 px-3">
    <MudItem xs="4">
        <MudStack Row="true" Justify="Justify.FlexStart">
            <MudButton Variant="Variant.Outlined" Color="Color.Info" OnClick="ValueCompare_Callback">Compare</MudButton>
        </MudStack>
    </MudItem>
    <MudItem xs="4">
        <MudText Typo="Typo.h4" Align="Align.Center" Style="width:100%">
            @(Title)
        </MudText>
    </MudItem>
    <MudItem xs="4">
        <MudStack Row="true" Justify="Justify.FlexEnd">
            <MudButton Variant="Variant.Filled" Color="Color.Success">
                @(IsUpdate ? "Update" : "Save")
            </MudButton>
        </MudStack>
    </MudItem>
</MudGrid>

<MudTabs @ref="mudTabsRef" Elevation="4" Rounded="true" Centered="true" Color="@Color.Primary" Class="tab-bar">
    @ChildContent
</MudTabs>


@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public EventCallback ValueCompare_Callback { get; set; }

    [Parameter]
    public bool IsUpdate { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    MudTabs? mudTabsRef;

    public void ReloadState()
    {
        // This method is used for refreshing tab header names when they are changed (for example by effects in Spell Visual Kit)
        this.StateHasChanged();
    }
}